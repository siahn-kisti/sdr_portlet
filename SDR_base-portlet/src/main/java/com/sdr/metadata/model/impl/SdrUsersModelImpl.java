package com.sdr.metadata.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sdr.metadata.model.SdrUsers;
import com.sdr.metadata.model.SdrUsersModel;
import com.sdr.metadata.model.SdrUsersSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SdrUsers service. Represents a row in the &quot;sdr_SdrUsers&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sdr.metadata.model.SdrUsersModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SdrUsersImpl}.
 * </p>
 *
 * @author jaesung
 * @see SdrUsersImpl
 * @see com.sdr.metadata.model.SdrUsers
 * @see com.sdr.metadata.model.SdrUsersModel
 * @generated
 */
@JSON(strict = true)
public class SdrUsersModelImpl extends BaseModelImpl<SdrUsers>
    implements SdrUsersModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a sdr users model instance should use the {@link com.sdr.metadata.model.SdrUsers} interface instead.
     */
    public static final String TABLE_NAME = "sdr_SdrUsers";
    public static final Object[][] TABLE_COLUMNS = {
            { "userId", Types.BIGINT },
            { "firstName", Types.VARCHAR },
            { "lastName", Types.VARCHAR },
            { "email", Types.VARCHAR },
            { "organizationId", Types.BIGINT },
            { "createUser", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table sdr_SdrUsers (userId LONG not null primary key,firstName VARCHAR(50) null,lastName VARCHAR(50) null,email VARCHAR(100) null,organizationId LONG,createUser LONG)";
    public static final String TABLE_SQL_DROP = "drop table sdr_SdrUsers";
    public static final String ORDER_BY_JPQL = " ORDER BY sdrUsers.userId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY sdr_SdrUsers.userId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.sdr.metadata.model.SdrUsers"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.sdr.metadata.model.SdrUsers"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.sdr.metadata.model.SdrUsers"));
    private static ClassLoader _classLoader = SdrUsers.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            SdrUsers.class
        };
    private long _userId;
    private String _userUuid;
    private String _firstName;
    private String _lastName;
    private String _email;
    private long _organizationId;
    private long _createUser;
    private SdrUsers _escapedModel;

    public SdrUsersModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static SdrUsers toModel(SdrUsersSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        SdrUsers model = new SdrUsersImpl();

        model.setUserId(soapModel.getUserId());
        model.setFirstName(soapModel.getFirstName());
        model.setLastName(soapModel.getLastName());
        model.setEmail(soapModel.getEmail());
        model.setOrganizationId(soapModel.getOrganizationId());
        model.setCreateUser(soapModel.getCreateUser());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<SdrUsers> toModels(SdrUsersSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<SdrUsers> models = new ArrayList<SdrUsers>(soapModels.length);

        for (SdrUsersSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _userId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setUserId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _userId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return SdrUsers.class;
    }

    @Override
    public String getModelClassName() {
        return SdrUsers.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("userId", getUserId());
        attributes.put("firstName", getFirstName());
        attributes.put("lastName", getLastName());
        attributes.put("email", getEmail());
        attributes.put("organizationId", getOrganizationId());
        attributes.put("createUser", getCreateUser());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String firstName = (String) attributes.get("firstName");

        if (firstName != null) {
            setFirstName(firstName);
        }

        String lastName = (String) attributes.get("lastName");

        if (lastName != null) {
            setLastName(lastName);
        }

        String email = (String) attributes.get("email");

        if (email != null) {
            setEmail(email);
        }

        Long organizationId = (Long) attributes.get("organizationId");

        if (organizationId != null) {
            setOrganizationId(organizationId);
        }

        Long createUser = (Long) attributes.get("createUser");

        if (createUser != null) {
            setCreateUser(createUser);
        }
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    @Override
    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    @JSON
    @Override
    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    @Override
    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    @JSON
    @Override
    public String getEmail() {
        if (_email == null) {
            return StringPool.BLANK;
        } else {
            return _email;
        }
    }

    @Override
    public void setEmail(String email) {
        _email = email;
    }

    @JSON
    @Override
    public long getOrganizationId() {
        return _organizationId;
    }

    @Override
    public void setOrganizationId(long organizationId) {
        _organizationId = organizationId;
    }

    @JSON
    @Override
    public long getCreateUser() {
        return _createUser;
    }

    @Override
    public void setCreateUser(long createUser) {
        _createUser = createUser;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            SdrUsers.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public SdrUsers toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (SdrUsers) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SdrUsersImpl sdrUsersImpl = new SdrUsersImpl();

        sdrUsersImpl.setUserId(getUserId());
        sdrUsersImpl.setFirstName(getFirstName());
        sdrUsersImpl.setLastName(getLastName());
        sdrUsersImpl.setEmail(getEmail());
        sdrUsersImpl.setOrganizationId(getOrganizationId());
        sdrUsersImpl.setCreateUser(getCreateUser());

        sdrUsersImpl.resetOriginalValues();

        return sdrUsersImpl;
    }

    @Override
    public int compareTo(SdrUsers sdrUsers) {
        long primaryKey = sdrUsers.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof SdrUsers)) {
            return false;
        }

        SdrUsers sdrUsers = (SdrUsers) obj;

        long primaryKey = sdrUsers.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<SdrUsers> toCacheModel() {
        SdrUsersCacheModel sdrUsersCacheModel = new SdrUsersCacheModel();

        sdrUsersCacheModel.userId = getUserId();

        sdrUsersCacheModel.firstName = getFirstName();

        String firstName = sdrUsersCacheModel.firstName;

        if ((firstName != null) && (firstName.length() == 0)) {
            sdrUsersCacheModel.firstName = null;
        }

        sdrUsersCacheModel.lastName = getLastName();

        String lastName = sdrUsersCacheModel.lastName;

        if ((lastName != null) && (lastName.length() == 0)) {
            sdrUsersCacheModel.lastName = null;
        }

        sdrUsersCacheModel.email = getEmail();

        String email = sdrUsersCacheModel.email;

        if ((email != null) && (email.length() == 0)) {
            sdrUsersCacheModel.email = null;
        }

        sdrUsersCacheModel.organizationId = getOrganizationId();

        sdrUsersCacheModel.createUser = getCreateUser();

        return sdrUsersCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(13);

        sb.append("{userId=");
        sb.append(getUserId());
        sb.append(", firstName=");
        sb.append(getFirstName());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", email=");
        sb.append(getEmail());
        sb.append(", organizationId=");
        sb.append(getOrganizationId());
        sb.append(", createUser=");
        sb.append(getCreateUser());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(22);

        sb.append("<model><model-name>");
        sb.append("com.sdr.metadata.model.SdrUsers");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>email</column-name><column-value><![CDATA[");
        sb.append(getEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>organizationId</column-name><column-value><![CDATA[");
        sb.append(getOrganizationId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createUser</column-name><column-value><![CDATA[");
        sb.append(getCreateUser());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
