package com.sdr.metadata.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sdr.metadata.model.SdrOrganizations;
import com.sdr.metadata.model.SdrOrganizationsModel;
import com.sdr.metadata.model.SdrOrganizationsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SdrOrganizations service. Represents a row in the &quot;sdr_SdrOrganizations&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sdr.metadata.model.SdrOrganizationsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SdrOrganizationsImpl}.
 * </p>
 *
 * @author jaesung
 * @see SdrOrganizationsImpl
 * @see com.sdr.metadata.model.SdrOrganizations
 * @see com.sdr.metadata.model.SdrOrganizationsModel
 * @generated
 */
@JSON(strict = true)
public class SdrOrganizationsModelImpl extends BaseModelImpl<SdrOrganizations>
    implements SdrOrganizationsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a sdr organizations model instance should use the {@link com.sdr.metadata.model.SdrOrganizations} interface instead.
     */
    public static final String TABLE_NAME = "sdr_SdrOrganizations";
    public static final Object[][] TABLE_COLUMNS = {
            { "organizationId", Types.BIGINT },
            { "organizationName", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "url", Types.VARCHAR },
            { "address", Types.VARCHAR },
            { "zipcode", Types.VARCHAR },
            { "city", Types.VARCHAR },
            { "country", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table sdr_SdrOrganizations (organizationId LONG not null primary key,organizationName VARCHAR(75) null,description VARCHAR(75) null,url VARCHAR(75) null,address VARCHAR(75) null,zipcode VARCHAR(75) null,city VARCHAR(75) null,country VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table sdr_SdrOrganizations";
    public static final String ORDER_BY_JPQL = " ORDER BY sdrOrganizations.organizationId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY sdr_SdrOrganizations.organizationId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.sdr.metadata.model.SdrOrganizations"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.sdr.metadata.model.SdrOrganizations"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.sdr.metadata.model.SdrOrganizations"));
    private static ClassLoader _classLoader = SdrOrganizations.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            SdrOrganizations.class
        };
    private long _organizationId;
    private String _organizationName;
    private String _description;
    private String _url;
    private String _address;
    private String _zipcode;
    private String _city;
    private String _country;
    private SdrOrganizations _escapedModel;

    public SdrOrganizationsModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static SdrOrganizations toModel(SdrOrganizationsSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        SdrOrganizations model = new SdrOrganizationsImpl();

        model.setOrganizationId(soapModel.getOrganizationId());
        model.setOrganizationName(soapModel.getOrganizationName());
        model.setDescription(soapModel.getDescription());
        model.setUrl(soapModel.getUrl());
        model.setAddress(soapModel.getAddress());
        model.setZipcode(soapModel.getZipcode());
        model.setCity(soapModel.getCity());
        model.setCountry(soapModel.getCountry());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<SdrOrganizations> toModels(
        SdrOrganizationsSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<SdrOrganizations> models = new ArrayList<SdrOrganizations>(soapModels.length);

        for (SdrOrganizationsSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _organizationId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setOrganizationId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _organizationId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return SdrOrganizations.class;
    }

    @Override
    public String getModelClassName() {
        return SdrOrganizations.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("organizationId", getOrganizationId());
        attributes.put("organizationName", getOrganizationName());
        attributes.put("description", getDescription());
        attributes.put("url", getUrl());
        attributes.put("address", getAddress());
        attributes.put("zipcode", getZipcode());
        attributes.put("city", getCity());
        attributes.put("country", getCountry());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long organizationId = (Long) attributes.get("organizationId");

        if (organizationId != null) {
            setOrganizationId(organizationId);
        }

        String organizationName = (String) attributes.get("organizationName");

        if (organizationName != null) {
            setOrganizationName(organizationName);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String url = (String) attributes.get("url");

        if (url != null) {
            setUrl(url);
        }

        String address = (String) attributes.get("address");

        if (address != null) {
            setAddress(address);
        }

        String zipcode = (String) attributes.get("zipcode");

        if (zipcode != null) {
            setZipcode(zipcode);
        }

        String city = (String) attributes.get("city");

        if (city != null) {
            setCity(city);
        }

        String country = (String) attributes.get("country");

        if (country != null) {
            setCountry(country);
        }
    }

    @JSON
    @Override
    public long getOrganizationId() {
        return _organizationId;
    }

    @Override
    public void setOrganizationId(long organizationId) {
        _organizationId = organizationId;
    }

    @JSON
    @Override
    public String getOrganizationName() {
        if (_organizationName == null) {
            return StringPool.BLANK;
        } else {
            return _organizationName;
        }
    }

    @Override
    public void setOrganizationName(String organizationName) {
        _organizationName = organizationName;
    }

    @JSON
    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _description = description;
    }

    @JSON
    @Override
    public String getUrl() {
        if (_url == null) {
            return StringPool.BLANK;
        } else {
            return _url;
        }
    }

    @Override
    public void setUrl(String url) {
        _url = url;
    }

    @JSON
    @Override
    public String getAddress() {
        if (_address == null) {
            return StringPool.BLANK;
        } else {
            return _address;
        }
    }

    @Override
    public void setAddress(String address) {
        _address = address;
    }

    @JSON
    @Override
    public String getZipcode() {
        if (_zipcode == null) {
            return StringPool.BLANK;
        } else {
            return _zipcode;
        }
    }

    @Override
    public void setZipcode(String zipcode) {
        _zipcode = zipcode;
    }

    @JSON
    @Override
    public String getCity() {
        if (_city == null) {
            return StringPool.BLANK;
        } else {
            return _city;
        }
    }

    @Override
    public void setCity(String city) {
        _city = city;
    }

    @JSON
    @Override
    public String getCountry() {
        if (_country == null) {
            return StringPool.BLANK;
        } else {
            return _country;
        }
    }

    @Override
    public void setCountry(String country) {
        _country = country;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            SdrOrganizations.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public SdrOrganizations toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (SdrOrganizations) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SdrOrganizationsImpl sdrOrganizationsImpl = new SdrOrganizationsImpl();

        sdrOrganizationsImpl.setOrganizationId(getOrganizationId());
        sdrOrganizationsImpl.setOrganizationName(getOrganizationName());
        sdrOrganizationsImpl.setDescription(getDescription());
        sdrOrganizationsImpl.setUrl(getUrl());
        sdrOrganizationsImpl.setAddress(getAddress());
        sdrOrganizationsImpl.setZipcode(getZipcode());
        sdrOrganizationsImpl.setCity(getCity());
        sdrOrganizationsImpl.setCountry(getCountry());

        sdrOrganizationsImpl.resetOriginalValues();

        return sdrOrganizationsImpl;
    }

    @Override
    public int compareTo(SdrOrganizations sdrOrganizations) {
        long primaryKey = sdrOrganizations.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof SdrOrganizations)) {
            return false;
        }

        SdrOrganizations sdrOrganizations = (SdrOrganizations) obj;

        long primaryKey = sdrOrganizations.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<SdrOrganizations> toCacheModel() {
        SdrOrganizationsCacheModel sdrOrganizationsCacheModel = new SdrOrganizationsCacheModel();

        sdrOrganizationsCacheModel.organizationId = getOrganizationId();

        sdrOrganizationsCacheModel.organizationName = getOrganizationName();

        String organizationName = sdrOrganizationsCacheModel.organizationName;

        if ((organizationName != null) && (organizationName.length() == 0)) {
            sdrOrganizationsCacheModel.organizationName = null;
        }

        sdrOrganizationsCacheModel.description = getDescription();

        String description = sdrOrganizationsCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            sdrOrganizationsCacheModel.description = null;
        }

        sdrOrganizationsCacheModel.url = getUrl();

        String url = sdrOrganizationsCacheModel.url;

        if ((url != null) && (url.length() == 0)) {
            sdrOrganizationsCacheModel.url = null;
        }

        sdrOrganizationsCacheModel.address = getAddress();

        String address = sdrOrganizationsCacheModel.address;

        if ((address != null) && (address.length() == 0)) {
            sdrOrganizationsCacheModel.address = null;
        }

        sdrOrganizationsCacheModel.zipcode = getZipcode();

        String zipcode = sdrOrganizationsCacheModel.zipcode;

        if ((zipcode != null) && (zipcode.length() == 0)) {
            sdrOrganizationsCacheModel.zipcode = null;
        }

        sdrOrganizationsCacheModel.city = getCity();

        String city = sdrOrganizationsCacheModel.city;

        if ((city != null) && (city.length() == 0)) {
            sdrOrganizationsCacheModel.city = null;
        }

        sdrOrganizationsCacheModel.country = getCountry();

        String country = sdrOrganizationsCacheModel.country;

        if ((country != null) && (country.length() == 0)) {
            sdrOrganizationsCacheModel.country = null;
        }

        return sdrOrganizationsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(17);

        sb.append("{organizationId=");
        sb.append(getOrganizationId());
        sb.append(", organizationName=");
        sb.append(getOrganizationName());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", url=");
        sb.append(getUrl());
        sb.append(", address=");
        sb.append(getAddress());
        sb.append(", zipcode=");
        sb.append(getZipcode());
        sb.append(", city=");
        sb.append(getCity());
        sb.append(", country=");
        sb.append(getCountry());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(28);

        sb.append("<model><model-name>");
        sb.append("com.sdr.metadata.model.SdrOrganizations");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>organizationId</column-name><column-value><![CDATA[");
        sb.append(getOrganizationId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>organizationName</column-name><column-value><![CDATA[");
        sb.append(getOrganizationName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>url</column-name><column-value><![CDATA[");
        sb.append(getUrl());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address</column-name><column-value><![CDATA[");
        sb.append(getAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>zipcode</column-name><column-value><![CDATA[");
        sb.append(getZipcode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>city</column-name><column-value><![CDATA[");
        sb.append(getCity());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>country</column-name><column-value><![CDATA[");
        sb.append(getCountry());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
