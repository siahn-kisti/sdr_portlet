package com.sdr.metadata.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.sdr.metadata.model.AssetEntries_AssetTags;
import com.sdr.metadata.model.AssetEntries_AssetTagsModel;
import com.sdr.metadata.model.AssetEntries_AssetTagsSoap;
import com.sdr.metadata.service.persistence.AssetEntries_AssetTagsPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AssetEntries_AssetTags service. Represents a row in the &quot;sdr_AssetEntries_AssetTags&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sdr.metadata.model.AssetEntries_AssetTagsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AssetEntries_AssetTagsImpl}.
 * </p>
 *
 * @author jaesung
 * @see AssetEntries_AssetTagsImpl
 * @see com.sdr.metadata.model.AssetEntries_AssetTags
 * @see com.sdr.metadata.model.AssetEntries_AssetTagsModel
 * @generated
 */
@JSON(strict = true)
public class AssetEntries_AssetTagsModelImpl extends BaseModelImpl<AssetEntries_AssetTags>
    implements AssetEntries_AssetTagsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a asset entries_ asset tags model instance should use the {@link com.sdr.metadata.model.AssetEntries_AssetTags} interface instead.
     */
    public static final String TABLE_NAME = "sdr_AssetEntries_AssetTags";
    public static final Object[][] TABLE_COLUMNS = {
            { "entryId", Types.BIGINT },
            { "tagId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table sdr_AssetEntries_AssetTags (entryId LONG not null,tagId LONG not null,primary key (entryId, tagId))";
    public static final String TABLE_SQL_DROP = "drop table sdr_AssetEntries_AssetTags";
    public static final String ORDER_BY_JPQL = " ORDER BY assetEntries_AssetTags.id.entryId ASC, assetEntries_AssetTags.id.tagId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY sdr_AssetEntries_AssetTags.entryId ASC, sdr_AssetEntries_AssetTags.tagId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.sdr.metadata.model.AssetEntries_AssetTags"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.sdr.metadata.model.AssetEntries_AssetTags"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.sdr.metadata.model.AssetEntries_AssetTags"));
    private static ClassLoader _classLoader = AssetEntries_AssetTags.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AssetEntries_AssetTags.class
        };
    private long _entryId;
    private long _tagId;
    private AssetEntries_AssetTags _escapedModel;

    public AssetEntries_AssetTagsModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static AssetEntries_AssetTags toModel(
        AssetEntries_AssetTagsSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        AssetEntries_AssetTags model = new AssetEntries_AssetTagsImpl();

        model.setEntryId(soapModel.getEntryId());
        model.setTagId(soapModel.getTagId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<AssetEntries_AssetTags> toModels(
        AssetEntries_AssetTagsSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<AssetEntries_AssetTags> models = new ArrayList<AssetEntries_AssetTags>(soapModels.length);

        for (AssetEntries_AssetTagsSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public AssetEntries_AssetTagsPK getPrimaryKey() {
        return new AssetEntries_AssetTagsPK(_entryId, _tagId);
    }

    @Override
    public void setPrimaryKey(AssetEntries_AssetTagsPK primaryKey) {
        setEntryId(primaryKey.entryId);
        setTagId(primaryKey.tagId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new AssetEntries_AssetTagsPK(_entryId, _tagId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((AssetEntries_AssetTagsPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return AssetEntries_AssetTags.class;
    }

    @Override
    public String getModelClassName() {
        return AssetEntries_AssetTags.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("entryId", getEntryId());
        attributes.put("tagId", getTagId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long entryId = (Long) attributes.get("entryId");

        if (entryId != null) {
            setEntryId(entryId);
        }

        Long tagId = (Long) attributes.get("tagId");

        if (tagId != null) {
            setTagId(tagId);
        }
    }

    @JSON
    @Override
    public long getEntryId() {
        return _entryId;
    }

    @Override
    public void setEntryId(long entryId) {
        _entryId = entryId;
    }

    @JSON
    @Override
    public long getTagId() {
        return _tagId;
    }

    @Override
    public void setTagId(long tagId) {
        _tagId = tagId;
    }

    @Override
    public AssetEntries_AssetTags toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AssetEntries_AssetTags) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AssetEntries_AssetTagsImpl assetEntries_AssetTagsImpl = new AssetEntries_AssetTagsImpl();

        assetEntries_AssetTagsImpl.setEntryId(getEntryId());
        assetEntries_AssetTagsImpl.setTagId(getTagId());

        assetEntries_AssetTagsImpl.resetOriginalValues();

        return assetEntries_AssetTagsImpl;
    }

    @Override
    public int compareTo(AssetEntries_AssetTags assetEntries_AssetTags) {
        AssetEntries_AssetTagsPK primaryKey = assetEntries_AssetTags.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AssetEntries_AssetTags)) {
            return false;
        }

        AssetEntries_AssetTags assetEntries_AssetTags = (AssetEntries_AssetTags) obj;

        AssetEntries_AssetTagsPK primaryKey = assetEntries_AssetTags.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<AssetEntries_AssetTags> toCacheModel() {
        AssetEntries_AssetTagsCacheModel assetEntries_AssetTagsCacheModel = new AssetEntries_AssetTagsCacheModel();

        assetEntries_AssetTagsCacheModel.entryId = getEntryId();

        assetEntries_AssetTagsCacheModel.tagId = getTagId();

        return assetEntries_AssetTagsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{entryId=");
        sb.append(getEntryId());
        sb.append(", tagId=");
        sb.append(getTagId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.sdr.metadata.model.AssetEntries_AssetTags");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>entryId</column-name><column-value><![CDATA[");
        sb.append(getEntryId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tagId</column-name><column-value><![CDATA[");
        sb.append(getTagId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
