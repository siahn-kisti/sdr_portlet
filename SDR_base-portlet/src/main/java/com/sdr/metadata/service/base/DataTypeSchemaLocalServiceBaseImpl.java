package com.sdr.metadata.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.asset.service.persistence.AssetEntryPersistence;
import com.liferay.portlet.asset.service.persistence.AssetLinkPersistence;

import com.sdr.metadata.model.DataTypeSchema;
import com.sdr.metadata.service.DataTypeSchemaLocalService;
import com.sdr.metadata.service.persistence.ApiKeyPersistence;
import com.sdr.metadata.service.persistence.AssetEntries_AssetTagsPersistence;
import com.sdr.metadata.service.persistence.CollectionPersistence;
import com.sdr.metadata.service.persistence.Collection_AllowedUserPersistence;
import com.sdr.metadata.service.persistence.Collection_UserPersistence;
import com.sdr.metadata.service.persistence.CuratePersistence;
import com.sdr.metadata.service.persistence.CurationJobPersistence;
import com.sdr.metadata.service.persistence.DataTypePersistence;
import com.sdr.metadata.service.persistence.DataTypeSchemaPersistence;
import com.sdr.metadata.service.persistence.DataType_dataTypeSchema_essentialPersistence;
import com.sdr.metadata.service.persistence.DataViewComponentsPersistence;
import com.sdr.metadata.service.persistence.DataViewPersistence;
import com.sdr.metadata.service.persistence.DatasetPersistence;
import com.sdr.metadata.service.persistence.DatatypeRulePersistence;
import com.sdr.metadata.service.persistence.GroupRulePersistence;
import com.sdr.metadata.service.persistence.IceBreakerVcTokenPersistence;
import com.sdr.metadata.service.persistence.MlGuiParameterPersistence;
import com.sdr.metadata.service.persistence.PpLogicPersistence;
import com.sdr.metadata.service.persistence.ReqMakeSitePersistence;
import com.sdr.metadata.service.persistence.SdrOrganizationsPersistence;
import com.sdr.metadata.service.persistence.SdrUsersPersistence;
import com.sdr.metadata.service.persistence.SimulationJobPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the data type schema local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sdr.metadata.service.impl.DataTypeSchemaLocalServiceImpl}.
 * </p>
 *
 * @author jaesung
 * @see com.sdr.metadata.service.impl.DataTypeSchemaLocalServiceImpl
 * @see com.sdr.metadata.service.DataTypeSchemaLocalServiceUtil
 * @generated
 */
public abstract class DataTypeSchemaLocalServiceBaseImpl
    extends BaseLocalServiceImpl implements DataTypeSchemaLocalService,
        IdentifiableBean {
    @BeanReference(type = com.sdr.metadata.service.ApiKeyLocalService.class)
    protected com.sdr.metadata.service.ApiKeyLocalService apiKeyLocalService;
    @BeanReference(type = com.sdr.metadata.service.ApiKeyService.class)
    protected com.sdr.metadata.service.ApiKeyService apiKeyService;
    @BeanReference(type = ApiKeyPersistence.class)
    protected ApiKeyPersistence apiKeyPersistence;
    @BeanReference(type = com.sdr.metadata.service.AssetEntries_AssetTagsLocalService.class)
    protected com.sdr.metadata.service.AssetEntries_AssetTagsLocalService assetEntries_AssetTagsLocalService;
    @BeanReference(type = com.sdr.metadata.service.AssetEntries_AssetTagsService.class)
    protected com.sdr.metadata.service.AssetEntries_AssetTagsService assetEntries_AssetTagsService;
    @BeanReference(type = AssetEntries_AssetTagsPersistence.class)
    protected AssetEntries_AssetTagsPersistence assetEntries_AssetTagsPersistence;
    @BeanReference(type = com.sdr.metadata.service.CollectionLocalService.class)
    protected com.sdr.metadata.service.CollectionLocalService collectionLocalService;
    @BeanReference(type = com.sdr.metadata.service.CollectionService.class)
    protected com.sdr.metadata.service.CollectionService collectionService;
    @BeanReference(type = CollectionPersistence.class)
    protected CollectionPersistence collectionPersistence;
    @BeanReference(type = com.sdr.metadata.service.Collection_AllowedUserLocalService.class)
    protected com.sdr.metadata.service.Collection_AllowedUserLocalService collection_AllowedUserLocalService;
    @BeanReference(type = com.sdr.metadata.service.Collection_AllowedUserService.class)
    protected com.sdr.metadata.service.Collection_AllowedUserService collection_AllowedUserService;
    @BeanReference(type = Collection_AllowedUserPersistence.class)
    protected Collection_AllowedUserPersistence collection_AllowedUserPersistence;
    @BeanReference(type = com.sdr.metadata.service.Collection_UserLocalService.class)
    protected com.sdr.metadata.service.Collection_UserLocalService collection_UserLocalService;
    @BeanReference(type = com.sdr.metadata.service.Collection_UserService.class)
    protected com.sdr.metadata.service.Collection_UserService collection_UserService;
    @BeanReference(type = Collection_UserPersistence.class)
    protected Collection_UserPersistence collection_UserPersistence;
    @BeanReference(type = com.sdr.metadata.service.CurateLocalService.class)
    protected com.sdr.metadata.service.CurateLocalService curateLocalService;
    @BeanReference(type = com.sdr.metadata.service.CurateService.class)
    protected com.sdr.metadata.service.CurateService curateService;
    @BeanReference(type = CuratePersistence.class)
    protected CuratePersistence curatePersistence;
    @BeanReference(type = com.sdr.metadata.service.CurationJobLocalService.class)
    protected com.sdr.metadata.service.CurationJobLocalService curationJobLocalService;
    @BeanReference(type = com.sdr.metadata.service.CurationJobService.class)
    protected com.sdr.metadata.service.CurationJobService curationJobService;
    @BeanReference(type = CurationJobPersistence.class)
    protected CurationJobPersistence curationJobPersistence;
    @BeanReference(type = com.sdr.metadata.service.DatasetLocalService.class)
    protected com.sdr.metadata.service.DatasetLocalService datasetLocalService;
    @BeanReference(type = com.sdr.metadata.service.DatasetService.class)
    protected com.sdr.metadata.service.DatasetService datasetService;
    @BeanReference(type = DatasetPersistence.class)
    protected DatasetPersistence datasetPersistence;
    @BeanReference(type = com.sdr.metadata.service.DataTypeLocalService.class)
    protected com.sdr.metadata.service.DataTypeLocalService dataTypeLocalService;
    @BeanReference(type = com.sdr.metadata.service.DataTypeService.class)
    protected com.sdr.metadata.service.DataTypeService dataTypeService;
    @BeanReference(type = DataTypePersistence.class)
    protected DataTypePersistence dataTypePersistence;
    @BeanReference(type = com.sdr.metadata.service.DataType_dataTypeSchema_essentialLocalService.class)
    protected com.sdr.metadata.service.DataType_dataTypeSchema_essentialLocalService dataType_dataTypeSchema_essentialLocalService;
    @BeanReference(type = com.sdr.metadata.service.DataType_dataTypeSchema_essentialService.class)
    protected com.sdr.metadata.service.DataType_dataTypeSchema_essentialService dataType_dataTypeSchema_essentialService;
    @BeanReference(type = DataType_dataTypeSchema_essentialPersistence.class)
    protected DataType_dataTypeSchema_essentialPersistence dataType_dataTypeSchema_essentialPersistence;
    @BeanReference(type = com.sdr.metadata.service.DatatypeRuleLocalService.class)
    protected com.sdr.metadata.service.DatatypeRuleLocalService datatypeRuleLocalService;
    @BeanReference(type = com.sdr.metadata.service.DatatypeRuleService.class)
    protected com.sdr.metadata.service.DatatypeRuleService datatypeRuleService;
    @BeanReference(type = DatatypeRulePersistence.class)
    protected DatatypeRulePersistence datatypeRulePersistence;
    @BeanReference(type = com.sdr.metadata.service.DataTypeSchemaLocalService.class)
    protected com.sdr.metadata.service.DataTypeSchemaLocalService dataTypeSchemaLocalService;
    @BeanReference(type = com.sdr.metadata.service.DataTypeSchemaService.class)
    protected com.sdr.metadata.service.DataTypeSchemaService dataTypeSchemaService;
    @BeanReference(type = DataTypeSchemaPersistence.class)
    protected DataTypeSchemaPersistence dataTypeSchemaPersistence;
    @BeanReference(type = com.sdr.metadata.service.DataViewLocalService.class)
    protected com.sdr.metadata.service.DataViewLocalService dataViewLocalService;
    @BeanReference(type = com.sdr.metadata.service.DataViewService.class)
    protected com.sdr.metadata.service.DataViewService dataViewService;
    @BeanReference(type = DataViewPersistence.class)
    protected DataViewPersistence dataViewPersistence;
    @BeanReference(type = com.sdr.metadata.service.DataViewComponentsLocalService.class)
    protected com.sdr.metadata.service.DataViewComponentsLocalService dataViewComponentsLocalService;
    @BeanReference(type = com.sdr.metadata.service.DataViewComponentsService.class)
    protected com.sdr.metadata.service.DataViewComponentsService dataViewComponentsService;
    @BeanReference(type = DataViewComponentsPersistence.class)
    protected DataViewComponentsPersistence dataViewComponentsPersistence;
    @BeanReference(type = com.sdr.metadata.service.GroupRuleLocalService.class)
    protected com.sdr.metadata.service.GroupRuleLocalService groupRuleLocalService;
    @BeanReference(type = com.sdr.metadata.service.GroupRuleService.class)
    protected com.sdr.metadata.service.GroupRuleService groupRuleService;
    @BeanReference(type = GroupRulePersistence.class)
    protected GroupRulePersistence groupRulePersistence;
    @BeanReference(type = com.sdr.metadata.service.IceBreakerVcTokenLocalService.class)
    protected com.sdr.metadata.service.IceBreakerVcTokenLocalService iceBreakerVcTokenLocalService;
    @BeanReference(type = com.sdr.metadata.service.IceBreakerVcTokenService.class)
    protected com.sdr.metadata.service.IceBreakerVcTokenService iceBreakerVcTokenService;
    @BeanReference(type = IceBreakerVcTokenPersistence.class)
    protected IceBreakerVcTokenPersistence iceBreakerVcTokenPersistence;
    @BeanReference(type = com.sdr.metadata.service.MlGuiParameterLocalService.class)
    protected com.sdr.metadata.service.MlGuiParameterLocalService mlGuiParameterLocalService;
    @BeanReference(type = com.sdr.metadata.service.MlGuiParameterService.class)
    protected com.sdr.metadata.service.MlGuiParameterService mlGuiParameterService;
    @BeanReference(type = MlGuiParameterPersistence.class)
    protected MlGuiParameterPersistence mlGuiParameterPersistence;
    @BeanReference(type = com.sdr.metadata.service.PpLogicLocalService.class)
    protected com.sdr.metadata.service.PpLogicLocalService ppLogicLocalService;
    @BeanReference(type = com.sdr.metadata.service.PpLogicService.class)
    protected com.sdr.metadata.service.PpLogicService ppLogicService;
    @BeanReference(type = PpLogicPersistence.class)
    protected PpLogicPersistence ppLogicPersistence;
    @BeanReference(type = com.sdr.metadata.service.ReqMakeSiteLocalService.class)
    protected com.sdr.metadata.service.ReqMakeSiteLocalService reqMakeSiteLocalService;
    @BeanReference(type = com.sdr.metadata.service.ReqMakeSiteService.class)
    protected com.sdr.metadata.service.ReqMakeSiteService reqMakeSiteService;
    @BeanReference(type = ReqMakeSitePersistence.class)
    protected ReqMakeSitePersistence reqMakeSitePersistence;
    @BeanReference(type = com.sdr.metadata.service.SdrOrganizationsLocalService.class)
    protected com.sdr.metadata.service.SdrOrganizationsLocalService sdrOrganizationsLocalService;
    @BeanReference(type = com.sdr.metadata.service.SdrOrganizationsService.class)
    protected com.sdr.metadata.service.SdrOrganizationsService sdrOrganizationsService;
    @BeanReference(type = SdrOrganizationsPersistence.class)
    protected SdrOrganizationsPersistence sdrOrganizationsPersistence;
    @BeanReference(type = com.sdr.metadata.service.SdrUsersLocalService.class)
    protected com.sdr.metadata.service.SdrUsersLocalService sdrUsersLocalService;
    @BeanReference(type = com.sdr.metadata.service.SdrUsersService.class)
    protected com.sdr.metadata.service.SdrUsersService sdrUsersService;
    @BeanReference(type = SdrUsersPersistence.class)
    protected SdrUsersPersistence sdrUsersPersistence;
    @BeanReference(type = com.sdr.metadata.service.SimulationJobLocalService.class)
    protected com.sdr.metadata.service.SimulationJobLocalService simulationJobLocalService;
    @BeanReference(type = com.sdr.metadata.service.SimulationJobService.class)
    protected com.sdr.metadata.service.SimulationJobService simulationJobService;
    @BeanReference(type = SimulationJobPersistence.class)
    protected SimulationJobPersistence simulationJobPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryLocalService.class)
    protected com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryService.class)
    protected com.liferay.portlet.asset.service.AssetEntryService assetEntryService;
    @BeanReference(type = AssetEntryPersistence.class)
    protected AssetEntryPersistence assetEntryPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetLinkLocalService.class)
    protected com.liferay.portlet.asset.service.AssetLinkLocalService assetLinkLocalService;
    @BeanReference(type = AssetLinkPersistence.class)
    protected AssetLinkPersistence assetLinkPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private DataTypeSchemaLocalServiceClpInvoker _clpInvoker = new DataTypeSchemaLocalServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.sdr.metadata.service.DataTypeSchemaLocalServiceUtil} to access the data type schema local service.
     */

    /**
     * Adds the data type schema to the database. Also notifies the appropriate model listeners.
     *
     * @param dataTypeSchema the data type schema
     * @return the data type schema that was added
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.REINDEX)
    @Override
    public DataTypeSchema addDataTypeSchema(DataTypeSchema dataTypeSchema)
        throws SystemException {
        dataTypeSchema.setNew(true);

        return dataTypeSchemaPersistence.update(dataTypeSchema);
    }

    /**
     * Creates a new data type schema with the primary key. Does not add the data type schema to the database.
     *
     * @param dataTypeSchemaId the primary key for the new data type schema
     * @return the new data type schema
     */
    @Override
    public DataTypeSchema createDataTypeSchema(long dataTypeSchemaId) {
        return dataTypeSchemaPersistence.create(dataTypeSchemaId);
    }

    /**
     * Deletes the data type schema with the primary key from the database. Also notifies the appropriate model listeners.
     *
     * @param dataTypeSchemaId the primary key of the data type schema
     * @return the data type schema that was removed
     * @throws PortalException if a data type schema with the primary key could not be found
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.DELETE)
    @Override
    public DataTypeSchema deleteDataTypeSchema(long dataTypeSchemaId)
        throws PortalException, SystemException {
        return dataTypeSchemaPersistence.remove(dataTypeSchemaId);
    }

    /**
     * Deletes the data type schema from the database. Also notifies the appropriate model listeners.
     *
     * @param dataTypeSchema the data type schema
     * @return the data type schema that was removed
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.DELETE)
    @Override
    public DataTypeSchema deleteDataTypeSchema(DataTypeSchema dataTypeSchema)
        throws SystemException {
        return dataTypeSchemaPersistence.remove(dataTypeSchema);
    }

    @Override
    public DynamicQuery dynamicQuery() {
        Class<?> clazz = getClass();

        return DynamicQueryFactoryUtil.forClass(DataTypeSchema.class,
            clazz.getClassLoader());
    }

    /**
     * Performs a dynamic query on the database and returns the matching rows.
     *
     * @param dynamicQuery the dynamic query
     * @return the matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery)
        throws SystemException {
        return dataTypeSchemaPersistence.findWithDynamicQuery(dynamicQuery);
    }

    /**
     * Performs a dynamic query on the database and returns a range of the matching rows.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sdr.metadata.model.impl.DataTypeSchemaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param dynamicQuery the dynamic query
     * @param start the lower bound of the range of model instances
     * @param end the upper bound of the range of model instances (not inclusive)
     * @return the range of matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
        throws SystemException {
        return dataTypeSchemaPersistence.findWithDynamicQuery(dynamicQuery,
            start, end);
    }

    /**
     * Performs a dynamic query on the database and returns an ordered range of the matching rows.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sdr.metadata.model.impl.DataTypeSchemaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param dynamicQuery the dynamic query
     * @param start the lower bound of the range of model instances
     * @param end the upper bound of the range of model instances (not inclusive)
     * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
     * @return the ordered range of matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
        OrderByComparator orderByComparator) throws SystemException {
        return dataTypeSchemaPersistence.findWithDynamicQuery(dynamicQuery,
            start, end, orderByComparator);
    }

    /**
     * Returns the number of rows that match the dynamic query.
     *
     * @param dynamicQuery the dynamic query
     * @return the number of rows that match the dynamic query
     * @throws SystemException if a system exception occurred
     */
    @Override
    public long dynamicQueryCount(DynamicQuery dynamicQuery)
        throws SystemException {
        return dataTypeSchemaPersistence.countWithDynamicQuery(dynamicQuery);
    }

    /**
     * Returns the number of rows that match the dynamic query.
     *
     * @param dynamicQuery the dynamic query
     * @param projection the projection to apply to the query
     * @return the number of rows that match the dynamic query
     * @throws SystemException if a system exception occurred
     */
    @Override
    public long dynamicQueryCount(DynamicQuery dynamicQuery,
        Projection projection) throws SystemException {
        return dataTypeSchemaPersistence.countWithDynamicQuery(dynamicQuery,
            projection);
    }

    @Override
    public DataTypeSchema fetchDataTypeSchema(long dataTypeSchemaId)
        throws SystemException {
        return dataTypeSchemaPersistence.fetchByPrimaryKey(dataTypeSchemaId);
    }

    /**
     * Returns the data type schema with the primary key.
     *
     * @param dataTypeSchemaId the primary key of the data type schema
     * @return the data type schema
     * @throws PortalException if a data type schema with the primary key could not be found
     * @throws SystemException if a system exception occurred
     */
    @Override
    public DataTypeSchema getDataTypeSchema(long dataTypeSchemaId)
        throws PortalException, SystemException {
        return dataTypeSchemaPersistence.findByPrimaryKey(dataTypeSchemaId);
    }

    @Override
    public PersistedModel getPersistedModel(Serializable primaryKeyObj)
        throws PortalException, SystemException {
        return dataTypeSchemaPersistence.findByPrimaryKey(primaryKeyObj);
    }

    /**
     * Returns a range of all the data type schemas.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sdr.metadata.model.impl.DataTypeSchemaModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param start the lower bound of the range of data type schemas
     * @param end the upper bound of the range of data type schemas (not inclusive)
     * @return the range of data type schemas
     * @throws SystemException if a system exception occurred
     */
    @Override
    public List<DataTypeSchema> getDataTypeSchemas(int start, int end)
        throws SystemException {
        return dataTypeSchemaPersistence.findAll(start, end);
    }

    /**
     * Returns the number of data type schemas.
     *
     * @return the number of data type schemas
     * @throws SystemException if a system exception occurred
     */
    @Override
    public int getDataTypeSchemasCount() throws SystemException {
        return dataTypeSchemaPersistence.countAll();
    }

    /**
     * Updates the data type schema in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
     *
     * @param dataTypeSchema the data type schema
     * @return the data type schema that was updated
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.REINDEX)
    @Override
    public DataTypeSchema updateDataTypeSchema(DataTypeSchema dataTypeSchema)
        throws SystemException {
        return dataTypeSchemaPersistence.update(dataTypeSchema);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void addDataTypeDataTypeSchema(long dataTypeId, long dataTypeSchemaId)
        throws SystemException {
        dataTypePersistence.addDataTypeSchema(dataTypeId, dataTypeSchemaId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void addDataTypeDataTypeSchema(long dataTypeId,
        DataTypeSchema dataTypeSchema) throws SystemException {
        dataTypePersistence.addDataTypeSchema(dataTypeId, dataTypeSchema);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void addDataTypeDataTypeSchemas(long dataTypeId,
        long[] dataTypeSchemaIds) throws SystemException {
        dataTypePersistence.addDataTypeSchemas(dataTypeId, dataTypeSchemaIds);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void addDataTypeDataTypeSchemas(long dataTypeId,
        List<DataTypeSchema> DataTypeSchemas) throws SystemException {
        dataTypePersistence.addDataTypeSchemas(dataTypeId, DataTypeSchemas);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void clearDataTypeDataTypeSchemas(long dataTypeId)
        throws SystemException {
        dataTypePersistence.clearDataTypeSchemas(dataTypeId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void deleteDataTypeDataTypeSchema(long dataTypeId,
        long dataTypeSchemaId) throws SystemException {
        dataTypePersistence.removeDataTypeSchema(dataTypeId, dataTypeSchemaId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void deleteDataTypeDataTypeSchema(long dataTypeId,
        DataTypeSchema dataTypeSchema) throws SystemException {
        dataTypePersistence.removeDataTypeSchema(dataTypeId, dataTypeSchema);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void deleteDataTypeDataTypeSchemas(long dataTypeId,
        long[] dataTypeSchemaIds) throws SystemException {
        dataTypePersistence.removeDataTypeSchemas(dataTypeId, dataTypeSchemaIds);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void deleteDataTypeDataTypeSchemas(long dataTypeId,
        List<DataTypeSchema> DataTypeSchemas) throws SystemException {
        dataTypePersistence.removeDataTypeSchemas(dataTypeId, DataTypeSchemas);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public List<DataTypeSchema> getDataTypeDataTypeSchemas(long dataTypeId)
        throws SystemException {
        return dataTypePersistence.getDataTypeSchemas(dataTypeId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public List<DataTypeSchema> getDataTypeDataTypeSchemas(long dataTypeId,
        int start, int end) throws SystemException {
        return dataTypePersistence.getDataTypeSchemas(dataTypeId, start, end);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public List<DataTypeSchema> getDataTypeDataTypeSchemas(long dataTypeId,
        int start, int end, OrderByComparator orderByComparator)
        throws SystemException {
        return dataTypePersistence.getDataTypeSchemas(dataTypeId, start, end,
            orderByComparator);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public int getDataTypeDataTypeSchemasCount(long dataTypeId)
        throws SystemException {
        return dataTypePersistence.getDataTypeSchemasSize(dataTypeId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public boolean hasDataTypeDataTypeSchema(long dataTypeId,
        long dataTypeSchemaId) throws SystemException {
        return dataTypePersistence.containsDataTypeSchema(dataTypeId,
            dataTypeSchemaId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public boolean hasDataTypeDataTypeSchemas(long dataTypeId)
        throws SystemException {
        return dataTypePersistence.containsDataTypeSchemas(dataTypeId);
    }

    /**
     * @throws SystemException if a system exception occurred
     */
    @Override
    public void setDataTypeDataTypeSchemas(long dataTypeId,
        long[] dataTypeSchemaIds) throws SystemException {
        dataTypePersistence.setDataTypeSchemas(dataTypeId, dataTypeSchemaIds);
    }

    /**
     * Returns the api key local service.
     *
     * @return the api key local service
     */
    public com.sdr.metadata.service.ApiKeyLocalService getApiKeyLocalService() {
        return apiKeyLocalService;
    }

    /**
     * Sets the api key local service.
     *
     * @param apiKeyLocalService the api key local service
     */
    public void setApiKeyLocalService(
        com.sdr.metadata.service.ApiKeyLocalService apiKeyLocalService) {
        this.apiKeyLocalService = apiKeyLocalService;
    }

    /**
     * Returns the api key remote service.
     *
     * @return the api key remote service
     */
    public com.sdr.metadata.service.ApiKeyService getApiKeyService() {
        return apiKeyService;
    }

    /**
     * Sets the api key remote service.
     *
     * @param apiKeyService the api key remote service
     */
    public void setApiKeyService(
        com.sdr.metadata.service.ApiKeyService apiKeyService) {
        this.apiKeyService = apiKeyService;
    }

    /**
     * Returns the api key persistence.
     *
     * @return the api key persistence
     */
    public ApiKeyPersistence getApiKeyPersistence() {
        return apiKeyPersistence;
    }

    /**
     * Sets the api key persistence.
     *
     * @param apiKeyPersistence the api key persistence
     */
    public void setApiKeyPersistence(ApiKeyPersistence apiKeyPersistence) {
        this.apiKeyPersistence = apiKeyPersistence;
    }

    /**
     * Returns the asset entries_ asset tags local service.
     *
     * @return the asset entries_ asset tags local service
     */
    public com.sdr.metadata.service.AssetEntries_AssetTagsLocalService getAssetEntries_AssetTagsLocalService() {
        return assetEntries_AssetTagsLocalService;
    }

    /**
     * Sets the asset entries_ asset tags local service.
     *
     * @param assetEntries_AssetTagsLocalService the asset entries_ asset tags local service
     */
    public void setAssetEntries_AssetTagsLocalService(
        com.sdr.metadata.service.AssetEntries_AssetTagsLocalService assetEntries_AssetTagsLocalService) {
        this.assetEntries_AssetTagsLocalService = assetEntries_AssetTagsLocalService;
    }

    /**
     * Returns the asset entries_ asset tags remote service.
     *
     * @return the asset entries_ asset tags remote service
     */
    public com.sdr.metadata.service.AssetEntries_AssetTagsService getAssetEntries_AssetTagsService() {
        return assetEntries_AssetTagsService;
    }

    /**
     * Sets the asset entries_ asset tags remote service.
     *
     * @param assetEntries_AssetTagsService the asset entries_ asset tags remote service
     */
    public void setAssetEntries_AssetTagsService(
        com.sdr.metadata.service.AssetEntries_AssetTagsService assetEntries_AssetTagsService) {
        this.assetEntries_AssetTagsService = assetEntries_AssetTagsService;
    }

    /**
     * Returns the asset entries_ asset tags persistence.
     *
     * @return the asset entries_ asset tags persistence
     */
    public AssetEntries_AssetTagsPersistence getAssetEntries_AssetTagsPersistence() {
        return assetEntries_AssetTagsPersistence;
    }

    /**
     * Sets the asset entries_ asset tags persistence.
     *
     * @param assetEntries_AssetTagsPersistence the asset entries_ asset tags persistence
     */
    public void setAssetEntries_AssetTagsPersistence(
        AssetEntries_AssetTagsPersistence assetEntries_AssetTagsPersistence) {
        this.assetEntries_AssetTagsPersistence = assetEntries_AssetTagsPersistence;
    }

    /**
     * Returns the collection local service.
     *
     * @return the collection local service
     */
    public com.sdr.metadata.service.CollectionLocalService getCollectionLocalService() {
        return collectionLocalService;
    }

    /**
     * Sets the collection local service.
     *
     * @param collectionLocalService the collection local service
     */
    public void setCollectionLocalService(
        com.sdr.metadata.service.CollectionLocalService collectionLocalService) {
        this.collectionLocalService = collectionLocalService;
    }

    /**
     * Returns the collection remote service.
     *
     * @return the collection remote service
     */
    public com.sdr.metadata.service.CollectionService getCollectionService() {
        return collectionService;
    }

    /**
     * Sets the collection remote service.
     *
     * @param collectionService the collection remote service
     */
    public void setCollectionService(
        com.sdr.metadata.service.CollectionService collectionService) {
        this.collectionService = collectionService;
    }

    /**
     * Returns the collection persistence.
     *
     * @return the collection persistence
     */
    public CollectionPersistence getCollectionPersistence() {
        return collectionPersistence;
    }

    /**
     * Sets the collection persistence.
     *
     * @param collectionPersistence the collection persistence
     */
    public void setCollectionPersistence(
        CollectionPersistence collectionPersistence) {
        this.collectionPersistence = collectionPersistence;
    }

    /**
     * Returns the collection_ allowed user local service.
     *
     * @return the collection_ allowed user local service
     */
    public com.sdr.metadata.service.Collection_AllowedUserLocalService getCollection_AllowedUserLocalService() {
        return collection_AllowedUserLocalService;
    }

    /**
     * Sets the collection_ allowed user local service.
     *
     * @param collection_AllowedUserLocalService the collection_ allowed user local service
     */
    public void setCollection_AllowedUserLocalService(
        com.sdr.metadata.service.Collection_AllowedUserLocalService collection_AllowedUserLocalService) {
        this.collection_AllowedUserLocalService = collection_AllowedUserLocalService;
    }

    /**
     * Returns the collection_ allowed user remote service.
     *
     * @return the collection_ allowed user remote service
     */
    public com.sdr.metadata.service.Collection_AllowedUserService getCollection_AllowedUserService() {
        return collection_AllowedUserService;
    }

    /**
     * Sets the collection_ allowed user remote service.
     *
     * @param collection_AllowedUserService the collection_ allowed user remote service
     */
    public void setCollection_AllowedUserService(
        com.sdr.metadata.service.Collection_AllowedUserService collection_AllowedUserService) {
        this.collection_AllowedUserService = collection_AllowedUserService;
    }

    /**
     * Returns the collection_ allowed user persistence.
     *
     * @return the collection_ allowed user persistence
     */
    public Collection_AllowedUserPersistence getCollection_AllowedUserPersistence() {
        return collection_AllowedUserPersistence;
    }

    /**
     * Sets the collection_ allowed user persistence.
     *
     * @param collection_AllowedUserPersistence the collection_ allowed user persistence
     */
    public void setCollection_AllowedUserPersistence(
        Collection_AllowedUserPersistence collection_AllowedUserPersistence) {
        this.collection_AllowedUserPersistence = collection_AllowedUserPersistence;
    }

    /**
     * Returns the collection_ user local service.
     *
     * @return the collection_ user local service
     */
    public com.sdr.metadata.service.Collection_UserLocalService getCollection_UserLocalService() {
        return collection_UserLocalService;
    }

    /**
     * Sets the collection_ user local service.
     *
     * @param collection_UserLocalService the collection_ user local service
     */
    public void setCollection_UserLocalService(
        com.sdr.metadata.service.Collection_UserLocalService collection_UserLocalService) {
        this.collection_UserLocalService = collection_UserLocalService;
    }

    /**
     * Returns the collection_ user remote service.
     *
     * @return the collection_ user remote service
     */
    public com.sdr.metadata.service.Collection_UserService getCollection_UserService() {
        return collection_UserService;
    }

    /**
     * Sets the collection_ user remote service.
     *
     * @param collection_UserService the collection_ user remote service
     */
    public void setCollection_UserService(
        com.sdr.metadata.service.Collection_UserService collection_UserService) {
        this.collection_UserService = collection_UserService;
    }

    /**
     * Returns the collection_ user persistence.
     *
     * @return the collection_ user persistence
     */
    public Collection_UserPersistence getCollection_UserPersistence() {
        return collection_UserPersistence;
    }

    /**
     * Sets the collection_ user persistence.
     *
     * @param collection_UserPersistence the collection_ user persistence
     */
    public void setCollection_UserPersistence(
        Collection_UserPersistence collection_UserPersistence) {
        this.collection_UserPersistence = collection_UserPersistence;
    }

    /**
     * Returns the curate local service.
     *
     * @return the curate local service
     */
    public com.sdr.metadata.service.CurateLocalService getCurateLocalService() {
        return curateLocalService;
    }

    /**
     * Sets the curate local service.
     *
     * @param curateLocalService the curate local service
     */
    public void setCurateLocalService(
        com.sdr.metadata.service.CurateLocalService curateLocalService) {
        this.curateLocalService = curateLocalService;
    }

    /**
     * Returns the curate remote service.
     *
     * @return the curate remote service
     */
    public com.sdr.metadata.service.CurateService getCurateService() {
        return curateService;
    }

    /**
     * Sets the curate remote service.
     *
     * @param curateService the curate remote service
     */
    public void setCurateService(
        com.sdr.metadata.service.CurateService curateService) {
        this.curateService = curateService;
    }

    /**
     * Returns the curate persistence.
     *
     * @return the curate persistence
     */
    public CuratePersistence getCuratePersistence() {
        return curatePersistence;
    }

    /**
     * Sets the curate persistence.
     *
     * @param curatePersistence the curate persistence
     */
    public void setCuratePersistence(CuratePersistence curatePersistence) {
        this.curatePersistence = curatePersistence;
    }

    /**
     * Returns the curation job local service.
     *
     * @return the curation job local service
     */
    public com.sdr.metadata.service.CurationJobLocalService getCurationJobLocalService() {
        return curationJobLocalService;
    }

    /**
     * Sets the curation job local service.
     *
     * @param curationJobLocalService the curation job local service
     */
    public void setCurationJobLocalService(
        com.sdr.metadata.service.CurationJobLocalService curationJobLocalService) {
        this.curationJobLocalService = curationJobLocalService;
    }

    /**
     * Returns the curation job remote service.
     *
     * @return the curation job remote service
     */
    public com.sdr.metadata.service.CurationJobService getCurationJobService() {
        return curationJobService;
    }

    /**
     * Sets the curation job remote service.
     *
     * @param curationJobService the curation job remote service
     */
    public void setCurationJobService(
        com.sdr.metadata.service.CurationJobService curationJobService) {
        this.curationJobService = curationJobService;
    }

    /**
     * Returns the curation job persistence.
     *
     * @return the curation job persistence
     */
    public CurationJobPersistence getCurationJobPersistence() {
        return curationJobPersistence;
    }

    /**
     * Sets the curation job persistence.
     *
     * @param curationJobPersistence the curation job persistence
     */
    public void setCurationJobPersistence(
        CurationJobPersistence curationJobPersistence) {
        this.curationJobPersistence = curationJobPersistence;
    }

    /**
     * Returns the dataset local service.
     *
     * @return the dataset local service
     */
    public com.sdr.metadata.service.DatasetLocalService getDatasetLocalService() {
        return datasetLocalService;
    }

    /**
     * Sets the dataset local service.
     *
     * @param datasetLocalService the dataset local service
     */
    public void setDatasetLocalService(
        com.sdr.metadata.service.DatasetLocalService datasetLocalService) {
        this.datasetLocalService = datasetLocalService;
    }

    /**
     * Returns the dataset remote service.
     *
     * @return the dataset remote service
     */
    public com.sdr.metadata.service.DatasetService getDatasetService() {
        return datasetService;
    }

    /**
     * Sets the dataset remote service.
     *
     * @param datasetService the dataset remote service
     */
    public void setDatasetService(
        com.sdr.metadata.service.DatasetService datasetService) {
        this.datasetService = datasetService;
    }

    /**
     * Returns the dataset persistence.
     *
     * @return the dataset persistence
     */
    public DatasetPersistence getDatasetPersistence() {
        return datasetPersistence;
    }

    /**
     * Sets the dataset persistence.
     *
     * @param datasetPersistence the dataset persistence
     */
    public void setDatasetPersistence(DatasetPersistence datasetPersistence) {
        this.datasetPersistence = datasetPersistence;
    }

    /**
     * Returns the data type local service.
     *
     * @return the data type local service
     */
    public com.sdr.metadata.service.DataTypeLocalService getDataTypeLocalService() {
        return dataTypeLocalService;
    }

    /**
     * Sets the data type local service.
     *
     * @param dataTypeLocalService the data type local service
     */
    public void setDataTypeLocalService(
        com.sdr.metadata.service.DataTypeLocalService dataTypeLocalService) {
        this.dataTypeLocalService = dataTypeLocalService;
    }

    /**
     * Returns the data type remote service.
     *
     * @return the data type remote service
     */
    public com.sdr.metadata.service.DataTypeService getDataTypeService() {
        return dataTypeService;
    }

    /**
     * Sets the data type remote service.
     *
     * @param dataTypeService the data type remote service
     */
    public void setDataTypeService(
        com.sdr.metadata.service.DataTypeService dataTypeService) {
        this.dataTypeService = dataTypeService;
    }

    /**
     * Returns the data type persistence.
     *
     * @return the data type persistence
     */
    public DataTypePersistence getDataTypePersistence() {
        return dataTypePersistence;
    }

    /**
     * Sets the data type persistence.
     *
     * @param dataTypePersistence the data type persistence
     */
    public void setDataTypePersistence(DataTypePersistence dataTypePersistence) {
        this.dataTypePersistence = dataTypePersistence;
    }

    /**
     * Returns the data type_data type schema_essential local service.
     *
     * @return the data type_data type schema_essential local service
     */
    public com.sdr.metadata.service.DataType_dataTypeSchema_essentialLocalService getDataType_dataTypeSchema_essentialLocalService() {
        return dataType_dataTypeSchema_essentialLocalService;
    }

    /**
     * Sets the data type_data type schema_essential local service.
     *
     * @param dataType_dataTypeSchema_essentialLocalService the data type_data type schema_essential local service
     */
    public void setDataType_dataTypeSchema_essentialLocalService(
        com.sdr.metadata.service.DataType_dataTypeSchema_essentialLocalService dataType_dataTypeSchema_essentialLocalService) {
        this.dataType_dataTypeSchema_essentialLocalService = dataType_dataTypeSchema_essentialLocalService;
    }

    /**
     * Returns the data type_data type schema_essential remote service.
     *
     * @return the data type_data type schema_essential remote service
     */
    public com.sdr.metadata.service.DataType_dataTypeSchema_essentialService getDataType_dataTypeSchema_essentialService() {
        return dataType_dataTypeSchema_essentialService;
    }

    /**
     * Sets the data type_data type schema_essential remote service.
     *
     * @param dataType_dataTypeSchema_essentialService the data type_data type schema_essential remote service
     */
    public void setDataType_dataTypeSchema_essentialService(
        com.sdr.metadata.service.DataType_dataTypeSchema_essentialService dataType_dataTypeSchema_essentialService) {
        this.dataType_dataTypeSchema_essentialService = dataType_dataTypeSchema_essentialService;
    }

    /**
     * Returns the data type_data type schema_essential persistence.
     *
     * @return the data type_data type schema_essential persistence
     */
    public DataType_dataTypeSchema_essentialPersistence getDataType_dataTypeSchema_essentialPersistence() {
        return dataType_dataTypeSchema_essentialPersistence;
    }

    /**
     * Sets the data type_data type schema_essential persistence.
     *
     * @param dataType_dataTypeSchema_essentialPersistence the data type_data type schema_essential persistence
     */
    public void setDataType_dataTypeSchema_essentialPersistence(
        DataType_dataTypeSchema_essentialPersistence dataType_dataTypeSchema_essentialPersistence) {
        this.dataType_dataTypeSchema_essentialPersistence = dataType_dataTypeSchema_essentialPersistence;
    }

    /**
     * Returns the datatype rule local service.
     *
     * @return the datatype rule local service
     */
    public com.sdr.metadata.service.DatatypeRuleLocalService getDatatypeRuleLocalService() {
        return datatypeRuleLocalService;
    }

    /**
     * Sets the datatype rule local service.
     *
     * @param datatypeRuleLocalService the datatype rule local service
     */
    public void setDatatypeRuleLocalService(
        com.sdr.metadata.service.DatatypeRuleLocalService datatypeRuleLocalService) {
        this.datatypeRuleLocalService = datatypeRuleLocalService;
    }

    /**
     * Returns the datatype rule remote service.
     *
     * @return the datatype rule remote service
     */
    public com.sdr.metadata.service.DatatypeRuleService getDatatypeRuleService() {
        return datatypeRuleService;
    }

    /**
     * Sets the datatype rule remote service.
     *
     * @param datatypeRuleService the datatype rule remote service
     */
    public void setDatatypeRuleService(
        com.sdr.metadata.service.DatatypeRuleService datatypeRuleService) {
        this.datatypeRuleService = datatypeRuleService;
    }

    /**
     * Returns the datatype rule persistence.
     *
     * @return the datatype rule persistence
     */
    public DatatypeRulePersistence getDatatypeRulePersistence() {
        return datatypeRulePersistence;
    }

    /**
     * Sets the datatype rule persistence.
     *
     * @param datatypeRulePersistence the datatype rule persistence
     */
    public void setDatatypeRulePersistence(
        DatatypeRulePersistence datatypeRulePersistence) {
        this.datatypeRulePersistence = datatypeRulePersistence;
    }

    /**
     * Returns the data type schema local service.
     *
     * @return the data type schema local service
     */
    public com.sdr.metadata.service.DataTypeSchemaLocalService getDataTypeSchemaLocalService() {
        return dataTypeSchemaLocalService;
    }

    /**
     * Sets the data type schema local service.
     *
     * @param dataTypeSchemaLocalService the data type schema local service
     */
    public void setDataTypeSchemaLocalService(
        com.sdr.metadata.service.DataTypeSchemaLocalService dataTypeSchemaLocalService) {
        this.dataTypeSchemaLocalService = dataTypeSchemaLocalService;
    }

    /**
     * Returns the data type schema remote service.
     *
     * @return the data type schema remote service
     */
    public com.sdr.metadata.service.DataTypeSchemaService getDataTypeSchemaService() {
        return dataTypeSchemaService;
    }

    /**
     * Sets the data type schema remote service.
     *
     * @param dataTypeSchemaService the data type schema remote service
     */
    public void setDataTypeSchemaService(
        com.sdr.metadata.service.DataTypeSchemaService dataTypeSchemaService) {
        this.dataTypeSchemaService = dataTypeSchemaService;
    }

    /**
     * Returns the data type schema persistence.
     *
     * @return the data type schema persistence
     */
    public DataTypeSchemaPersistence getDataTypeSchemaPersistence() {
        return dataTypeSchemaPersistence;
    }

    /**
     * Sets the data type schema persistence.
     *
     * @param dataTypeSchemaPersistence the data type schema persistence
     */
    public void setDataTypeSchemaPersistence(
        DataTypeSchemaPersistence dataTypeSchemaPersistence) {
        this.dataTypeSchemaPersistence = dataTypeSchemaPersistence;
    }

    /**
     * Returns the data view local service.
     *
     * @return the data view local service
     */
    public com.sdr.metadata.service.DataViewLocalService getDataViewLocalService() {
        return dataViewLocalService;
    }

    /**
     * Sets the data view local service.
     *
     * @param dataViewLocalService the data view local service
     */
    public void setDataViewLocalService(
        com.sdr.metadata.service.DataViewLocalService dataViewLocalService) {
        this.dataViewLocalService = dataViewLocalService;
    }

    /**
     * Returns the data view remote service.
     *
     * @return the data view remote service
     */
    public com.sdr.metadata.service.DataViewService getDataViewService() {
        return dataViewService;
    }

    /**
     * Sets the data view remote service.
     *
     * @param dataViewService the data view remote service
     */
    public void setDataViewService(
        com.sdr.metadata.service.DataViewService dataViewService) {
        this.dataViewService = dataViewService;
    }

    /**
     * Returns the data view persistence.
     *
     * @return the data view persistence
     */
    public DataViewPersistence getDataViewPersistence() {
        return dataViewPersistence;
    }

    /**
     * Sets the data view persistence.
     *
     * @param dataViewPersistence the data view persistence
     */
    public void setDataViewPersistence(DataViewPersistence dataViewPersistence) {
        this.dataViewPersistence = dataViewPersistence;
    }

    /**
     * Returns the data view components local service.
     *
     * @return the data view components local service
     */
    public com.sdr.metadata.service.DataViewComponentsLocalService getDataViewComponentsLocalService() {
        return dataViewComponentsLocalService;
    }

    /**
     * Sets the data view components local service.
     *
     * @param dataViewComponentsLocalService the data view components local service
     */
    public void setDataViewComponentsLocalService(
        com.sdr.metadata.service.DataViewComponentsLocalService dataViewComponentsLocalService) {
        this.dataViewComponentsLocalService = dataViewComponentsLocalService;
    }

    /**
     * Returns the data view components remote service.
     *
     * @return the data view components remote service
     */
    public com.sdr.metadata.service.DataViewComponentsService getDataViewComponentsService() {
        return dataViewComponentsService;
    }

    /**
     * Sets the data view components remote service.
     *
     * @param dataViewComponentsService the data view components remote service
     */
    public void setDataViewComponentsService(
        com.sdr.metadata.service.DataViewComponentsService dataViewComponentsService) {
        this.dataViewComponentsService = dataViewComponentsService;
    }

    /**
     * Returns the data view components persistence.
     *
     * @return the data view components persistence
     */
    public DataViewComponentsPersistence getDataViewComponentsPersistence() {
        return dataViewComponentsPersistence;
    }

    /**
     * Sets the data view components persistence.
     *
     * @param dataViewComponentsPersistence the data view components persistence
     */
    public void setDataViewComponentsPersistence(
        DataViewComponentsPersistence dataViewComponentsPersistence) {
        this.dataViewComponentsPersistence = dataViewComponentsPersistence;
    }

    /**
     * Returns the group rule local service.
     *
     * @return the group rule local service
     */
    public com.sdr.metadata.service.GroupRuleLocalService getGroupRuleLocalService() {
        return groupRuleLocalService;
    }

    /**
     * Sets the group rule local service.
     *
     * @param groupRuleLocalService the group rule local service
     */
    public void setGroupRuleLocalService(
        com.sdr.metadata.service.GroupRuleLocalService groupRuleLocalService) {
        this.groupRuleLocalService = groupRuleLocalService;
    }

    /**
     * Returns the group rule remote service.
     *
     * @return the group rule remote service
     */
    public com.sdr.metadata.service.GroupRuleService getGroupRuleService() {
        return groupRuleService;
    }

    /**
     * Sets the group rule remote service.
     *
     * @param groupRuleService the group rule remote service
     */
    public void setGroupRuleService(
        com.sdr.metadata.service.GroupRuleService groupRuleService) {
        this.groupRuleService = groupRuleService;
    }

    /**
     * Returns the group rule persistence.
     *
     * @return the group rule persistence
     */
    public GroupRulePersistence getGroupRulePersistence() {
        return groupRulePersistence;
    }

    /**
     * Sets the group rule persistence.
     *
     * @param groupRulePersistence the group rule persistence
     */
    public void setGroupRulePersistence(
        GroupRulePersistence groupRulePersistence) {
        this.groupRulePersistence = groupRulePersistence;
    }

    /**
     * Returns the ice breaker vc token local service.
     *
     * @return the ice breaker vc token local service
     */
    public com.sdr.metadata.service.IceBreakerVcTokenLocalService getIceBreakerVcTokenLocalService() {
        return iceBreakerVcTokenLocalService;
    }

    /**
     * Sets the ice breaker vc token local service.
     *
     * @param iceBreakerVcTokenLocalService the ice breaker vc token local service
     */
    public void setIceBreakerVcTokenLocalService(
        com.sdr.metadata.service.IceBreakerVcTokenLocalService iceBreakerVcTokenLocalService) {
        this.iceBreakerVcTokenLocalService = iceBreakerVcTokenLocalService;
    }

    /**
     * Returns the ice breaker vc token remote service.
     *
     * @return the ice breaker vc token remote service
     */
    public com.sdr.metadata.service.IceBreakerVcTokenService getIceBreakerVcTokenService() {
        return iceBreakerVcTokenService;
    }

    /**
     * Sets the ice breaker vc token remote service.
     *
     * @param iceBreakerVcTokenService the ice breaker vc token remote service
     */
    public void setIceBreakerVcTokenService(
        com.sdr.metadata.service.IceBreakerVcTokenService iceBreakerVcTokenService) {
        this.iceBreakerVcTokenService = iceBreakerVcTokenService;
    }

    /**
     * Returns the ice breaker vc token persistence.
     *
     * @return the ice breaker vc token persistence
     */
    public IceBreakerVcTokenPersistence getIceBreakerVcTokenPersistence() {
        return iceBreakerVcTokenPersistence;
    }

    /**
     * Sets the ice breaker vc token persistence.
     *
     * @param iceBreakerVcTokenPersistence the ice breaker vc token persistence
     */
    public void setIceBreakerVcTokenPersistence(
        IceBreakerVcTokenPersistence iceBreakerVcTokenPersistence) {
        this.iceBreakerVcTokenPersistence = iceBreakerVcTokenPersistence;
    }

    /**
     * Returns the ml gui parameter local service.
     *
     * @return the ml gui parameter local service
     */
    public com.sdr.metadata.service.MlGuiParameterLocalService getMlGuiParameterLocalService() {
        return mlGuiParameterLocalService;
    }

    /**
     * Sets the ml gui parameter local service.
     *
     * @param mlGuiParameterLocalService the ml gui parameter local service
     */
    public void setMlGuiParameterLocalService(
        com.sdr.metadata.service.MlGuiParameterLocalService mlGuiParameterLocalService) {
        this.mlGuiParameterLocalService = mlGuiParameterLocalService;
    }

    /**
     * Returns the ml gui parameter remote service.
     *
     * @return the ml gui parameter remote service
     */
    public com.sdr.metadata.service.MlGuiParameterService getMlGuiParameterService() {
        return mlGuiParameterService;
    }

    /**
     * Sets the ml gui parameter remote service.
     *
     * @param mlGuiParameterService the ml gui parameter remote service
     */
    public void setMlGuiParameterService(
        com.sdr.metadata.service.MlGuiParameterService mlGuiParameterService) {
        this.mlGuiParameterService = mlGuiParameterService;
    }

    /**
     * Returns the ml gui parameter persistence.
     *
     * @return the ml gui parameter persistence
     */
    public MlGuiParameterPersistence getMlGuiParameterPersistence() {
        return mlGuiParameterPersistence;
    }

    /**
     * Sets the ml gui parameter persistence.
     *
     * @param mlGuiParameterPersistence the ml gui parameter persistence
     */
    public void setMlGuiParameterPersistence(
        MlGuiParameterPersistence mlGuiParameterPersistence) {
        this.mlGuiParameterPersistence = mlGuiParameterPersistence;
    }

    /**
     * Returns the pp logic local service.
     *
     * @return the pp logic local service
     */
    public com.sdr.metadata.service.PpLogicLocalService getPpLogicLocalService() {
        return ppLogicLocalService;
    }

    /**
     * Sets the pp logic local service.
     *
     * @param ppLogicLocalService the pp logic local service
     */
    public void setPpLogicLocalService(
        com.sdr.metadata.service.PpLogicLocalService ppLogicLocalService) {
        this.ppLogicLocalService = ppLogicLocalService;
    }

    /**
     * Returns the pp logic remote service.
     *
     * @return the pp logic remote service
     */
    public com.sdr.metadata.service.PpLogicService getPpLogicService() {
        return ppLogicService;
    }

    /**
     * Sets the pp logic remote service.
     *
     * @param ppLogicService the pp logic remote service
     */
    public void setPpLogicService(
        com.sdr.metadata.service.PpLogicService ppLogicService) {
        this.ppLogicService = ppLogicService;
    }

    /**
     * Returns the pp logic persistence.
     *
     * @return the pp logic persistence
     */
    public PpLogicPersistence getPpLogicPersistence() {
        return ppLogicPersistence;
    }

    /**
     * Sets the pp logic persistence.
     *
     * @param ppLogicPersistence the pp logic persistence
     */
    public void setPpLogicPersistence(PpLogicPersistence ppLogicPersistence) {
        this.ppLogicPersistence = ppLogicPersistence;
    }

    /**
     * Returns the req make site local service.
     *
     * @return the req make site local service
     */
    public com.sdr.metadata.service.ReqMakeSiteLocalService getReqMakeSiteLocalService() {
        return reqMakeSiteLocalService;
    }

    /**
     * Sets the req make site local service.
     *
     * @param reqMakeSiteLocalService the req make site local service
     */
    public void setReqMakeSiteLocalService(
        com.sdr.metadata.service.ReqMakeSiteLocalService reqMakeSiteLocalService) {
        this.reqMakeSiteLocalService = reqMakeSiteLocalService;
    }

    /**
     * Returns the req make site remote service.
     *
     * @return the req make site remote service
     */
    public com.sdr.metadata.service.ReqMakeSiteService getReqMakeSiteService() {
        return reqMakeSiteService;
    }

    /**
     * Sets the req make site remote service.
     *
     * @param reqMakeSiteService the req make site remote service
     */
    public void setReqMakeSiteService(
        com.sdr.metadata.service.ReqMakeSiteService reqMakeSiteService) {
        this.reqMakeSiteService = reqMakeSiteService;
    }

    /**
     * Returns the req make site persistence.
     *
     * @return the req make site persistence
     */
    public ReqMakeSitePersistence getReqMakeSitePersistence() {
        return reqMakeSitePersistence;
    }

    /**
     * Sets the req make site persistence.
     *
     * @param reqMakeSitePersistence the req make site persistence
     */
    public void setReqMakeSitePersistence(
        ReqMakeSitePersistence reqMakeSitePersistence) {
        this.reqMakeSitePersistence = reqMakeSitePersistence;
    }

    /**
     * Returns the sdr organizations local service.
     *
     * @return the sdr organizations local service
     */
    public com.sdr.metadata.service.SdrOrganizationsLocalService getSdrOrganizationsLocalService() {
        return sdrOrganizationsLocalService;
    }

    /**
     * Sets the sdr organizations local service.
     *
     * @param sdrOrganizationsLocalService the sdr organizations local service
     */
    public void setSdrOrganizationsLocalService(
        com.sdr.metadata.service.SdrOrganizationsLocalService sdrOrganizationsLocalService) {
        this.sdrOrganizationsLocalService = sdrOrganizationsLocalService;
    }

    /**
     * Returns the sdr organizations remote service.
     *
     * @return the sdr organizations remote service
     */
    public com.sdr.metadata.service.SdrOrganizationsService getSdrOrganizationsService() {
        return sdrOrganizationsService;
    }

    /**
     * Sets the sdr organizations remote service.
     *
     * @param sdrOrganizationsService the sdr organizations remote service
     */
    public void setSdrOrganizationsService(
        com.sdr.metadata.service.SdrOrganizationsService sdrOrganizationsService) {
        this.sdrOrganizationsService = sdrOrganizationsService;
    }

    /**
     * Returns the sdr organizations persistence.
     *
     * @return the sdr organizations persistence
     */
    public SdrOrganizationsPersistence getSdrOrganizationsPersistence() {
        return sdrOrganizationsPersistence;
    }

    /**
     * Sets the sdr organizations persistence.
     *
     * @param sdrOrganizationsPersistence the sdr organizations persistence
     */
    public void setSdrOrganizationsPersistence(
        SdrOrganizationsPersistence sdrOrganizationsPersistence) {
        this.sdrOrganizationsPersistence = sdrOrganizationsPersistence;
    }

    /**
     * Returns the sdr users local service.
     *
     * @return the sdr users local service
     */
    public com.sdr.metadata.service.SdrUsersLocalService getSdrUsersLocalService() {
        return sdrUsersLocalService;
    }

    /**
     * Sets the sdr users local service.
     *
     * @param sdrUsersLocalService the sdr users local service
     */
    public void setSdrUsersLocalService(
        com.sdr.metadata.service.SdrUsersLocalService sdrUsersLocalService) {
        this.sdrUsersLocalService = sdrUsersLocalService;
    }

    /**
     * Returns the sdr users remote service.
     *
     * @return the sdr users remote service
     */
    public com.sdr.metadata.service.SdrUsersService getSdrUsersService() {
        return sdrUsersService;
    }

    /**
     * Sets the sdr users remote service.
     *
     * @param sdrUsersService the sdr users remote service
     */
    public void setSdrUsersService(
        com.sdr.metadata.service.SdrUsersService sdrUsersService) {
        this.sdrUsersService = sdrUsersService;
    }

    /**
     * Returns the sdr users persistence.
     *
     * @return the sdr users persistence
     */
    public SdrUsersPersistence getSdrUsersPersistence() {
        return sdrUsersPersistence;
    }

    /**
     * Sets the sdr users persistence.
     *
     * @param sdrUsersPersistence the sdr users persistence
     */
    public void setSdrUsersPersistence(SdrUsersPersistence sdrUsersPersistence) {
        this.sdrUsersPersistence = sdrUsersPersistence;
    }

    /**
     * Returns the simulation job local service.
     *
     * @return the simulation job local service
     */
    public com.sdr.metadata.service.SimulationJobLocalService getSimulationJobLocalService() {
        return simulationJobLocalService;
    }

    /**
     * Sets the simulation job local service.
     *
     * @param simulationJobLocalService the simulation job local service
     */
    public void setSimulationJobLocalService(
        com.sdr.metadata.service.SimulationJobLocalService simulationJobLocalService) {
        this.simulationJobLocalService = simulationJobLocalService;
    }

    /**
     * Returns the simulation job remote service.
     *
     * @return the simulation job remote service
     */
    public com.sdr.metadata.service.SimulationJobService getSimulationJobService() {
        return simulationJobService;
    }

    /**
     * Sets the simulation job remote service.
     *
     * @param simulationJobService the simulation job remote service
     */
    public void setSimulationJobService(
        com.sdr.metadata.service.SimulationJobService simulationJobService) {
        this.simulationJobService = simulationJobService;
    }

    /**
     * Returns the simulation job persistence.
     *
     * @return the simulation job persistence
     */
    public SimulationJobPersistence getSimulationJobPersistence() {
        return simulationJobPersistence;
    }

    /**
     * Sets the simulation job persistence.
     *
     * @param simulationJobPersistence the simulation job persistence
     */
    public void setSimulationJobPersistence(
        SimulationJobPersistence simulationJobPersistence) {
        this.simulationJobPersistence = simulationJobPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    /**
     * Returns the asset entry local service.
     *
     * @return the asset entry local service
     */
    public com.liferay.portlet.asset.service.AssetEntryLocalService getAssetEntryLocalService() {
        return assetEntryLocalService;
    }

    /**
     * Sets the asset entry local service.
     *
     * @param assetEntryLocalService the asset entry local service
     */
    public void setAssetEntryLocalService(
        com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService) {
        this.assetEntryLocalService = assetEntryLocalService;
    }

    /**
     * Returns the asset entry remote service.
     *
     * @return the asset entry remote service
     */
    public com.liferay.portlet.asset.service.AssetEntryService getAssetEntryService() {
        return assetEntryService;
    }

    /**
     * Sets the asset entry remote service.
     *
     * @param assetEntryService the asset entry remote service
     */
    public void setAssetEntryService(
        com.liferay.portlet.asset.service.AssetEntryService assetEntryService) {
        this.assetEntryService = assetEntryService;
    }

    /**
     * Returns the asset entry persistence.
     *
     * @return the asset entry persistence
     */
    public AssetEntryPersistence getAssetEntryPersistence() {
        return assetEntryPersistence;
    }

    /**
     * Sets the asset entry persistence.
     *
     * @param assetEntryPersistence the asset entry persistence
     */
    public void setAssetEntryPersistence(
        AssetEntryPersistence assetEntryPersistence) {
        this.assetEntryPersistence = assetEntryPersistence;
    }

    /**
     * Returns the asset link local service.
     *
     * @return the asset link local service
     */
    public com.liferay.portlet.asset.service.AssetLinkLocalService getAssetLinkLocalService() {
        return assetLinkLocalService;
    }

    /**
     * Sets the asset link local service.
     *
     * @param assetLinkLocalService the asset link local service
     */
    public void setAssetLinkLocalService(
        com.liferay.portlet.asset.service.AssetLinkLocalService assetLinkLocalService) {
        this.assetLinkLocalService = assetLinkLocalService;
    }

    /**
     * Returns the asset link persistence.
     *
     * @return the asset link persistence
     */
    public AssetLinkPersistence getAssetLinkPersistence() {
        return assetLinkPersistence;
    }

    /**
     * Sets the asset link persistence.
     *
     * @param assetLinkPersistence the asset link persistence
     */
    public void setAssetLinkPersistence(
        AssetLinkPersistence assetLinkPersistence) {
        this.assetLinkPersistence = assetLinkPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();

        PersistedModelLocalServiceRegistryUtil.register("com.sdr.metadata.model.DataTypeSchema",
            dataTypeSchemaLocalService);
    }

    public void destroy() {
        PersistedModelLocalServiceRegistryUtil.unregister(
            "com.sdr.metadata.model.DataTypeSchema");
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return DataTypeSchema.class;
    }

    protected String getModelClassName() {
        return DataTypeSchema.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = dataTypeSchemaPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
