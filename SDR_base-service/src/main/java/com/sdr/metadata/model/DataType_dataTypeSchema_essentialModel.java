package com.sdr.metadata.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import com.sdr.metadata.service.persistence.DataType_dataTypeSchema_essentialPK;

import java.io.Serializable;

/**
 * The base model interface for the DataType_dataTypeSchema_essential service. Represents a row in the &quot;sdr_DataType_dataTypeSchema_essential&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sdr.metadata.model.impl.DataType_dataTypeSchema_essentialModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sdr.metadata.model.impl.DataType_dataTypeSchema_essentialImpl}.
 * </p>
 *
 * @author jaesung
 * @see DataType_dataTypeSchema_essential
 * @see com.sdr.metadata.model.impl.DataType_dataTypeSchema_essentialImpl
 * @see com.sdr.metadata.model.impl.DataType_dataTypeSchema_essentialModelImpl
 * @generated
 */
public interface DataType_dataTypeSchema_essentialModel extends BaseModel<DataType_dataTypeSchema_essential> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a data type_data type schema_essential model instance should use the {@link DataType_dataTypeSchema_essential} interface instead.
     */

    /**
     * Returns the primary key of this data type_data type schema_essential.
     *
     * @return the primary key of this data type_data type schema_essential
     */
    public DataType_dataTypeSchema_essentialPK getPrimaryKey();

    /**
     * Sets the primary key of this data type_data type schema_essential.
     *
     * @param primaryKey the primary key of this data type_data type schema_essential
     */
    public void setPrimaryKey(DataType_dataTypeSchema_essentialPK primaryKey);

    /**
     * Returns the data type ID of this data type_data type schema_essential.
     *
     * @return the data type ID of this data type_data type schema_essential
     */
    public long getDataTypeId();

    /**
     * Sets the data type ID of this data type_data type schema_essential.
     *
     * @param dataTypeId the data type ID of this data type_data type schema_essential
     */
    public void setDataTypeId(long dataTypeId);

    /**
     * Returns the data type schema ID of this data type_data type schema_essential.
     *
     * @return the data type schema ID of this data type_data type schema_essential
     */
    public long getDataTypeSchemaId();

    /**
     * Sets the data type schema ID of this data type_data type schema_essential.
     *
     * @param dataTypeSchemaId the data type schema ID of this data type_data type schema_essential
     */
    public void setDataTypeSchemaId(long dataTypeSchemaId);

    /**
     * Returns the essential of this data type_data type schema_essential.
     *
     * @return the essential of this data type_data type schema_essential
     */
    public boolean getEssential();

    /**
     * Returns <code>true</code> if this data type_data type schema_essential is essential.
     *
     * @return <code>true</code> if this data type_data type schema_essential is essential; <code>false</code> otherwise
     */
    public boolean isEssential();

    /**
     * Sets whether this data type_data type schema_essential is essential.
     *
     * @param essential the essential of this data type_data type schema_essential
     */
    public void setEssential(boolean essential);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(
        com.sdr.metadata.model.DataType_dataTypeSchema_essential dataType_dataTypeSchema_essential);

    @Override
    public int hashCode();

    @Override
    public CacheModel<com.sdr.metadata.model.DataType_dataTypeSchema_essential> toCacheModel();

    @Override
    public com.sdr.metadata.model.DataType_dataTypeSchema_essential toEscapedModel();

    @Override
    public com.sdr.metadata.model.DataType_dataTypeSchema_essential toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
