package com.sdr.popup.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sdr.popup.model.Popup;
import com.sdr.popup.model.PopupModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Popup service. Represents a row in the &quot;sdr_popup_Popup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sdr.popup.model.PopupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PopupImpl}.
 * </p>
 *
 * @author goopsw
 * @see PopupImpl
 * @see com.sdr.popup.model.Popup
 * @see com.sdr.popup.model.PopupModel
 * @generated
 */
public class PopupModelImpl extends BaseModelImpl<Popup> implements PopupModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a popup model instance should use the {@link com.sdr.popup.model.Popup} interface instead.
     */
    public static final String TABLE_NAME = "sdr_popup_Popup";
    public static final Object[][] TABLE_COLUMNS = {
            { "popupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "title", Types.VARCHAR },
            { "startDate", Types.TIMESTAMP },
            { "finishDate", Types.TIMESTAMP },
            { "width", Types.INTEGER },
            { "height", Types.INTEGER },
            { "enable", Types.BOOLEAN },
            { "imgPath", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table sdr_popup_Popup (popupId LONG not null primary key,companyId LONG,groupId LONG,title VARCHAR(75) null,startDate DATE null,finishDate DATE null,width INTEGER,height INTEGER,enable BOOLEAN,imgPath LONG)";
    public static final String TABLE_SQL_DROP = "drop table sdr_popup_Popup";
    public static final String ORDER_BY_JPQL = " ORDER BY popup.startDate DESC, popup.finishDate DESC, popup.popupId DESC";
    public static final String ORDER_BY_SQL = " ORDER BY sdr_popup_Popup.startDate DESC, sdr_popup_Popup.finishDate DESC, sdr_popup_Popup.popupId DESC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.sdr.popup.model.Popup"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.sdr.popup.model.Popup"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.sdr.popup.model.Popup"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long ENABLE_COLUMN_BITMASK = 2L;
    public static long FINISHDATE_COLUMN_BITMASK = 4L;
    public static long GROUPID_COLUMN_BITMASK = 8L;
    public static long STARTDATE_COLUMN_BITMASK = 16L;
    public static long POPUPID_COLUMN_BITMASK = 32L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.sdr.popup.model.Popup"));
    private static ClassLoader _classLoader = Popup.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Popup.class };
    private long _popupId;
    private long _companyId;
    private long _originalCompanyId;
    private boolean _setOriginalCompanyId;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private String _title;
    private Date _startDate;
    private Date _originalStartDate;
    private Date _finishDate;
    private Date _originalFinishDate;
    private int _width;
    private int _height;
    private boolean _enable;
    private boolean _originalEnable;
    private boolean _setOriginalEnable;
    private long _imgPath;
    private long _columnBitmask;
    private Popup _escapedModel;

    public PopupModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _popupId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setPopupId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _popupId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Popup.class;
    }

    @Override
    public String getModelClassName() {
        return Popup.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("popupId", getPopupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("groupId", getGroupId());
        attributes.put("title", getTitle());
        attributes.put("startDate", getStartDate());
        attributes.put("finishDate", getFinishDate());
        attributes.put("width", getWidth());
        attributes.put("height", getHeight());
        attributes.put("enable", getEnable());
        attributes.put("imgPath", getImgPath());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long popupId = (Long) attributes.get("popupId");

        if (popupId != null) {
            setPopupId(popupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        String title = (String) attributes.get("title");

        if (title != null) {
            setTitle(title);
        }

        Date startDate = (Date) attributes.get("startDate");

        if (startDate != null) {
            setStartDate(startDate);
        }

        Date finishDate = (Date) attributes.get("finishDate");

        if (finishDate != null) {
            setFinishDate(finishDate);
        }

        Integer width = (Integer) attributes.get("width");

        if (width != null) {
            setWidth(width);
        }

        Integer height = (Integer) attributes.get("height");

        if (height != null) {
            setHeight(height);
        }

        Boolean enable = (Boolean) attributes.get("enable");

        if (enable != null) {
            setEnable(enable);
        }

        Long imgPath = (Long) attributes.get("imgPath");

        if (imgPath != null) {
            setImgPath(imgPath);
        }
    }

    @Override
    public long getPopupId() {
        return _popupId;
    }

    @Override
    public void setPopupId(long popupId) {
        _columnBitmask = -1L;

        _popupId = popupId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (!_setOriginalCompanyId) {
            _setOriginalCompanyId = true;

            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public long getOriginalCompanyId() {
        return _originalCompanyId;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @Override
    public String getTitle() {
        if (_title == null) {
            return StringPool.BLANK;
        } else {
            return _title;
        }
    }

    @Override
    public void setTitle(String title) {
        _title = title;
    }

    @Override
    public Date getStartDate() {
        return _startDate;
    }

    @Override
    public void setStartDate(Date startDate) {
        _columnBitmask = -1L;

        if (_originalStartDate == null) {
            _originalStartDate = _startDate;
        }

        _startDate = startDate;
    }

    public Date getOriginalStartDate() {
        return _originalStartDate;
    }

    @Override
    public Date getFinishDate() {
        return _finishDate;
    }

    @Override
    public void setFinishDate(Date finishDate) {
        _columnBitmask = -1L;

        if (_originalFinishDate == null) {
            _originalFinishDate = _finishDate;
        }

        _finishDate = finishDate;
    }

    public Date getOriginalFinishDate() {
        return _originalFinishDate;
    }

    @Override
    public int getWidth() {
        return _width;
    }

    @Override
    public void setWidth(int width) {
        _width = width;
    }

    @Override
    public int getHeight() {
        return _height;
    }

    @Override
    public void setHeight(int height) {
        _height = height;
    }

    @Override
    public boolean getEnable() {
        return _enable;
    }

    @Override
    public boolean isEnable() {
        return _enable;
    }

    @Override
    public void setEnable(boolean enable) {
        _columnBitmask |= ENABLE_COLUMN_BITMASK;

        if (!_setOriginalEnable) {
            _setOriginalEnable = true;

            _originalEnable = _enable;
        }

        _enable = enable;
    }

    public boolean getOriginalEnable() {
        return _originalEnable;
    }

    @Override
    public long getImgPath() {
        return _imgPath;
    }

    @Override
    public void setImgPath(long imgPath) {
        _imgPath = imgPath;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Popup.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Popup toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Popup) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PopupImpl popupImpl = new PopupImpl();

        popupImpl.setPopupId(getPopupId());
        popupImpl.setCompanyId(getCompanyId());
        popupImpl.setGroupId(getGroupId());
        popupImpl.setTitle(getTitle());
        popupImpl.setStartDate(getStartDate());
        popupImpl.setFinishDate(getFinishDate());
        popupImpl.setWidth(getWidth());
        popupImpl.setHeight(getHeight());
        popupImpl.setEnable(getEnable());
        popupImpl.setImgPath(getImgPath());

        popupImpl.resetOriginalValues();

        return popupImpl;
    }

    @Override
    public int compareTo(Popup popup) {
        int value = 0;

        value = DateUtil.compareTo(getStartDate(), popup.getStartDate());

        value = value * -1;

        if (value != 0) {
            return value;
        }

        value = DateUtil.compareTo(getFinishDate(), popup.getFinishDate());

        value = value * -1;

        if (value != 0) {
            return value;
        }

        if (getPopupId() < popup.getPopupId()) {
            value = -1;
        } else if (getPopupId() > popup.getPopupId()) {
            value = 1;
        } else {
            value = 0;
        }

        value = value * -1;

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Popup)) {
            return false;
        }

        Popup popup = (Popup) obj;

        long primaryKey = popup.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        PopupModelImpl popupModelImpl = this;

        popupModelImpl._originalCompanyId = popupModelImpl._companyId;

        popupModelImpl._setOriginalCompanyId = false;

        popupModelImpl._originalGroupId = popupModelImpl._groupId;

        popupModelImpl._setOriginalGroupId = false;

        popupModelImpl._originalStartDate = popupModelImpl._startDate;

        popupModelImpl._originalFinishDate = popupModelImpl._finishDate;

        popupModelImpl._originalEnable = popupModelImpl._enable;

        popupModelImpl._setOriginalEnable = false;

        popupModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Popup> toCacheModel() {
        PopupCacheModel popupCacheModel = new PopupCacheModel();

        popupCacheModel.popupId = getPopupId();

        popupCacheModel.companyId = getCompanyId();

        popupCacheModel.groupId = getGroupId();

        popupCacheModel.title = getTitle();

        String title = popupCacheModel.title;

        if ((title != null) && (title.length() == 0)) {
            popupCacheModel.title = null;
        }

        Date startDate = getStartDate();

        if (startDate != null) {
            popupCacheModel.startDate = startDate.getTime();
        } else {
            popupCacheModel.startDate = Long.MIN_VALUE;
        }

        Date finishDate = getFinishDate();

        if (finishDate != null) {
            popupCacheModel.finishDate = finishDate.getTime();
        } else {
            popupCacheModel.finishDate = Long.MIN_VALUE;
        }

        popupCacheModel.width = getWidth();

        popupCacheModel.height = getHeight();

        popupCacheModel.enable = getEnable();

        popupCacheModel.imgPath = getImgPath();

        return popupCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(21);

        sb.append("{popupId=");
        sb.append(getPopupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", title=");
        sb.append(getTitle());
        sb.append(", startDate=");
        sb.append(getStartDate());
        sb.append(", finishDate=");
        sb.append(getFinishDate());
        sb.append(", width=");
        sb.append(getWidth());
        sb.append(", height=");
        sb.append(getHeight());
        sb.append(", enable=");
        sb.append(getEnable());
        sb.append(", imgPath=");
        sb.append(getImgPath());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(34);

        sb.append("<model><model-name>");
        sb.append("com.sdr.popup.model.Popup");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>popupId</column-name><column-value><![CDATA[");
        sb.append(getPopupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>title</column-name><column-value><![CDATA[");
        sb.append(getTitle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>startDate</column-name><column-value><![CDATA[");
        sb.append(getStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>finishDate</column-name><column-value><![CDATA[");
        sb.append(getFinishDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>width</column-name><column-value><![CDATA[");
        sb.append(getWidth());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>height</column-name><column-value><![CDATA[");
        sb.append(getHeight());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>enable</column-name><column-value><![CDATA[");
        sb.append(getEnable());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>imgPath</column-name><column-value><![CDATA[");
        sb.append(getImgPath());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
